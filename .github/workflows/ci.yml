name: Push Metrics Fixture Generation
on:
  workflow_dispatch:
  push:
  pull_request:

jobs:
  unit-tests:
    name: Unit tests
    runs-on: ubuntu-22.04
    steps:
      - name: Collect Metrics
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@883117809c4875d07fd913841c37550535c8e56e
        with:
          basic-auth: ${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: ${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: Unit tests

      - name: Checkout source
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b #v3.0.2
        with:
          fetch-depth: 0

      - name: Install node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install pnpm
        uses: pnpm/action-setup@10693b3829bf86eb2572aef5f3571dcf5ca9287d #v2.2.2
        with:
          version: ^6.32.2
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - name: Cache npm artifacts
        uses: actions/cache@c3f1317a9e7b1ef106c153ac8c0f00fed3ddbc0d #v3.0.4
        with:
          path: |
            ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}

      - name: Install npm dependencies
        run: pnpm install

      - name: Run unit tests
        run: pnpm test -- unit

  dummy-job:
    name: my dummy job
    runs-on: ubuntu-18.04
    steps:
      - name: Dummy step 1
        uses: actions/checkout@v3
      - name: Collect Metrics
        uses: ./
        with:
          basic-auth: ${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: ${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: my dummy job

      - name: Dummy step 2
        id: dummy-step-2
        run: echo "test test test"

  dummy-job-dep:
    name: my dummy job
    needs: [dummy-job]
    runs-on: ubuntu-18.04
    steps:
      - name: Dummy step 1
        uses: actions/checkout@v3

      - name: Collect Metrics
        uses: ./
        with:
          basic-auth: ${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: ${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: my dummy job

      - name: Dummy step 2
        id: dummy-step-2
        run: echo "test test test"

  generate-fixtures:
    name: generate-fixtures-name-${{ matrix.name }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        name: ["1", "2"]
    env:
      test-dir: ./test/
      fixture-path: fixtures/${{ github.event_name }}
      payload-name:
        ${{ github.run_id }}-${{ github.run_attempt }}-${{ github.event_name }}
    steps:
      - name: Dummy step 1
        uses: actions/checkout@v3

      - name: Collect Metrics
        uses: ./
        with:
          basic-auth: ${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: ${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: generate-fixtures-name-${{ matrix.name }}
      - name: Remove old fixtures
        shell: bash
        run:
          rm -rf ${{ env.test-dir }}${{ env.fixture-path }}/{api,event,context}

      - name: Create required directories
        shell: bash
        run:
          mkdir -p ${{ env.test-dir }}${{ env.fixture-path
          }}/{api,event,context}

      - name: Dummy step 2
        id: dummy-step-2
        run: echo "test test test"

      - name: Gather API fixtures
        env:
          GH_TOKEN: ${{ github.token }}
          ATTEMPT_NUMBER: ${{ github.run_attempt }}
          RUN_ID: ${{ github.run_id }}
          EVENT_NAME: ${{ github.event_name }}
        run: ./scripts/generate-fixtures.sh
        working-directory: ${{ env.test-dir }}
        shell: bash

      - name: Dummy step 2
        id: dummy-step-22
        run: echo "test test test test"

      - name: Dump context
        uses: actions/github-script@v6
        env:
          dumpPath: ${{ env.test-dir }}${{ env.fixture-path }}/context/
        with:
          script: |
            const fs = require('fs')
            const path = require('path')
            fs.writeFileSync(path.join(process.env.dumpPath, 'context.json'), JSON.stringify(context))

      - name: Rename event JSON
        working-directory: ${{ env.test-dir }}
        run:
          mv ${{ github.event_path }} ./${{ env.fixture-path }}/event/${{
          env.payload-name }}.json

      - name: Upload fixtures
        uses: actions/upload-artifact@v3.1.0
        with:
          name: ${{ env.payload-name }}
          path: ${{ env.test-dir }}fixtures/
